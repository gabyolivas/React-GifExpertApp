{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","getGifs","a","url","encodeURI","fetch","response","json","data","gifs","map","datos","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAmCeA,EAhCK,SAAC,GAA0B,IAAvBC,EAAsB,EAAtBA,cAAsB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiB1C,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAQ,OAAMP,GAAN,mBAAqBO,OAC5CN,EAAe,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,+BCUjBG,EAlBF,uCAAG,WAAOL,GAAP,uBAAAM,EAAA,6DAENC,EAFM,iDAEgDC,UAAUR,GAF1D,+DAGWS,MAAOF,GAHlB,cAGNG,EAHM,gBAKWA,EAASC,OALpB,uBAKJC,EALI,EAKJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAU,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAMC,GACVC,MAAOF,EAAME,MACbV,IAAG,UAAEQ,EAAMG,cAAR,aAAE,EAAcC,iBAAiBZ,QAXhC,kBAeLM,GAfK,4CAAH,sDC2BEO,EAxBM,SAAEpB,GAAe,IAAD,EAEPR,mBAAS,CAC/BoB,KAAM,GACNS,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAoBjC,OAbAC,qBAAW,WACPnB,EAASL,GACRyB,MAAM,SAAAC,GAEHH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAKlB,CAAErB,IAEEsB,GCXIK,EAVK,SAAC,GAAyB,EAAtBX,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE/B,OACI,sBAAKqB,UAAU,6CAAf,UACI,qBAAKC,IAAMtB,EAAMuB,IAAQb,IACzB,4BAAKA,QCqBFc,EAxBC,SAAC,GAAkB,IAAhB/B,EAAe,EAAfA,SAAe,EAEIoB,EAAcpB,GAAlCkB,EAFgB,EAEtBN,KAAcS,EAFQ,EAERA,QAEtB,OACI,qCACA,6BAAKrB,IAEHqB,GAAW,mBAAGO,UAAU,6CAAb,wBAEZ,qBAAKA,UAAU,YAAf,SAEWV,EAAOJ,KAAK,SAAAkB,GAAG,OACX,cAAC,EAAD,eAEOA,GADEA,EAAIhB,aCoBtBiB,EAlCM,WAAM,MAKezC,mBAAS,CAAC,aALzB,mBAKf0C,EALe,KAKH3C,EALG,KAcvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBACA,6BAEQ2C,EAAWpB,KAAK,SAAAd,GAAQ,OACpB,cAAC,EAAD,CAEEA,SAAYA,GADLA,Y,MCtBjCmC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2e32cbbb.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( { setCategories }  ) => {\n    \n    const [ inputValue, setInputValue] = useState('');\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    };\n\n    const handleSubmit = ( e ) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ){\n           setCategories( category => [ inputValue, ...category ] );\n           setInputValue( '' );\n        }\n    };\n    \n    return (\n        <form onSubmit = { handleSubmit }>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    );\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","const getGifs = async( category ) => {\n\n    const url      = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=jy7RSfZf5f5J63l6kVNmv2V717v3lzfF`;\n    const response = await fetch( url );\n\n    const { data } = await response.json();\n\n    const gifs = data.map( datos => {\n        return {\n            id: datos.id,\n            title: datos.title,\n            url: datos.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n\nexport default getGifs;","import { useState, useEffect } from 'react';\nimport getGifs from '../helpers/getGifs';\n\nconst useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {        \n        getGifs( category )\n        .then( imgs => {\n            \n            setState({\n                data: imgs,\n                loading: false\n              });\n\n        })\n\n    }, [ category ]) \n\n    return state;\n\n}\n\nexport default useFetchGifs;","import React from 'react'\n\nconst GifGridItem = ( { id, title, url } ) => {\n    \n    return (\n        <div className=\"card animate__animated animate__backInDown\">\n            <img src={ url } alt = { title } />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;\n\n\n","import React from 'react';\nimport useFetchGifs from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({ category }) => {\n\n    const { data: images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n        <h3>{category}</h3> \n\n        { loading && <p className=\"card animate__animated animate__backInDown\">Loading...</p> }\n\n        {<div className=\"card-grid\">            \n                {\n                    images.map( img  => (\n                        <GifGridItem \n                          key = {img.id} \n                          { ...img }/>\n                    ))\n                }\n        </div>}\n        </>\n        \n    )\n}\n\nexport default GifGrid;\n","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    //const categories = ['París','Buenos Aires','New York'];\n\n    // Hook\n    const [ categories, setCategories ] = useState(['París']);\n\n    /*\n    // Función Add   \n    const handleAdd = () => {\n        setCategories( (c) => [...categories, 'Londres']);  // Spread para arrays\n    }\n    */\n    \n    return (\n        <>\n            <h2>Buscando GIFs</h2>\n            <AddCategory setCategories={ setCategories }/>\n            \n            <hr/>\n            <ol>\n                {\n                    categories.map( category  => (\n                        <GifGrid \n                          key = {category}  \n                          category = {category}/>\n                    ))\n                }\n            </ol>\n\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp/>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}